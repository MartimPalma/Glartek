{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\OneDrive\\\\Ambiente de Trabalho\\\\Glartek\\\\cron-manager\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport CronList from './components/CronList';\nimport CronForm from './components/CronForm';\nimport CronLogs from './components/CronLogs';\nimport ErrorMessage from './components/ErrorMessage';\nimport { getAllCrons, deleteCron, toggleCronStatus, executeCron } from './api/cronApi';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [crons, setCrons] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCron, setEditingCron] = useState(null);\n  const [selectedCronLogs, setSelectedCronLogs] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    loadCrons();\n    const interval = setInterval(loadCrons, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const loadCrons = async () => {\n    try {\n      const data = await getAllCrons();\n      setCrons(data);\n    } catch (err) {\n      setError('Erro ao carregar CRONs: ' + err.message);\n    }\n  };\n  const handleNewCron = () => {\n    setEditingCron(null);\n    setShowForm(true);\n  };\n  const handleEditCron = cron => {\n    setEditingCron(cron);\n    setShowForm(true);\n  };\n  const handleDeleteCron = async cronId => {\n    if (!window.confirm('Tem certeza que deseja eliminar este CRON?')) return;\n    try {\n      await deleteCron(cronId);\n      await loadCrons();\n    } catch (err) {\n      setError('Erro ao eliminar CRON: ' + err.message);\n    }\n  };\n  const handleToggleCron = async (cronId, isActive) => {\n    try {\n      await toggleCronStatus(cronId, isActive);\n      await loadCrons();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleExecuteCron = async cronId => {\n    try {\n      await executeCron(cronId);\n      setTimeout(loadCrons, 500);\n    } catch (err) {\n      setError('Erro ao executar CRON: ' + err.message);\n    }\n  };\n  const handleViewLogs = cron => {\n    setSelectedCronLogs(cron);\n  };\n  const handleCloseForm = () => {\n    setShowForm(false);\n    setEditingCron(null);\n  };\n  const handleCloseLogs = () => {\n    setSelectedCronLogs(null);\n  };\n  const handleFormSuccess = async () => {\n    await loadCrons();\n    handleCloseForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm border\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          totalCrons: crons.length,\n          activeCrons: crons.filter(c => c.isActive).length,\n          onNewCron: handleNewCron\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          message: error,\n          onClose: () => setError('')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CronList, {\n          crons: crons,\n          onEdit: handleEditCron,\n          onDelete: handleDeleteCron,\n          onToggle: handleToggleCron,\n          onExecute: handleExecuteCron,\n          onViewLogs: handleViewLogs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(CronForm, {\n        editingCron: editingCron,\n        onClose: handleCloseForm,\n        onSuccess: handleFormSuccess,\n        onError: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), selectedCronLogs && /*#__PURE__*/_jsxDEV(CronLogs, {\n        cron: selectedCronLogs,\n        onClose: handleCloseLogs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Sm18see+7sTbW4urMu/1a7jZ3Pc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","CronList","CronForm","CronLogs","ErrorMessage","getAllCrons","deleteCron","toggleCronStatus","executeCron","jsxDEV","_jsxDEV","App","_s","crons","setCrons","showForm","setShowForm","editingCron","setEditingCron","selectedCronLogs","setSelectedCronLogs","error","setError","loadCrons","interval","setInterval","clearInterval","data","err","message","handleNewCron","handleEditCron","cron","handleDeleteCron","cronId","window","confirm","handleToggleCron","isActive","handleExecuteCron","setTimeout","handleViewLogs","handleCloseForm","handleCloseLogs","handleFormSuccess","className","children","totalCrons","length","activeCrons","filter","c","onNewCron","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onEdit","onDelete","onToggle","onExecute","onViewLogs","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/marti/OneDrive/Ambiente de Trabalho/Glartek/cron-manager/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport CronList from './components/CronList';\nimport CronForm from './components/CronForm';\nimport CronLogs from './components/CronLogs';\nimport ErrorMessage from './components/ErrorMessage';\nimport { getAllCrons, deleteCron, toggleCronStatus, executeCron } from './api/cronApi';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  const [crons, setCrons] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingCron, setEditingCron] = useState(null);\n  const [selectedCronLogs, setSelectedCronLogs] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    loadCrons();\n    const interval = setInterval(loadCrons, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const loadCrons = async () => {\n    try {\n      const data = await getAllCrons();\n      setCrons(data);\n    } catch (err) {\n      setError('Erro ao carregar CRONs: ' + err.message);\n    }\n  };\n\n  const handleNewCron = () => {\n    setEditingCron(null);\n    setShowForm(true);\n  };\n\n  const handleEditCron = (cron) => {\n    setEditingCron(cron);\n    setShowForm(true);\n  };\n\n  const handleDeleteCron = async (cronId) => {\n    if (!window.confirm('Tem certeza que deseja eliminar este CRON?')) return;\n\n    try {\n      await deleteCron(cronId);\n      await loadCrons();\n    } catch (err) {\n      setError('Erro ao eliminar CRON: ' + err.message);\n    }\n  };\n\n  const handleToggleCron = async (cronId, isActive) => {\n    try {\n      await toggleCronStatus(cronId, isActive);\n      await loadCrons();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleExecuteCron = async (cronId) => {\n    try {\n      await executeCron(cronId);\n      setTimeout(loadCrons, 500);\n    } catch (err) {\n      setError('Erro ao executar CRON: ' + err.message);\n    }\n  };\n\n  const handleViewLogs = (cron) => {\n    setSelectedCronLogs(cron);\n  };\n\n  const handleCloseForm = () => {\n    setShowForm(false);\n    setEditingCron(null);\n  };\n\n  const handleCloseLogs = () => {\n    setSelectedCronLogs(null);\n  };\n\n  const handleFormSuccess = async () => {\n    await loadCrons();\n    handleCloseForm();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-sm border\">\n          <Header \n            totalCrons={crons.length}\n            activeCrons={crons.filter(c => c.isActive).length}\n            onNewCron={handleNewCron}\n          />\n\n          {error && (\n            <ErrorMessage \n              message={error} \n              onClose={() => setError('')} \n            />\n          )}\n\n          <CronList \n            crons={crons}\n            onEdit={handleEditCron}\n            onDelete={handleDeleteCron}\n            onToggle={handleToggleCron}\n            onExecute={handleExecuteCron}\n            onViewLogs={handleViewLogs}\n          />\n        </div>\n\n        {showForm && (\n          <CronForm \n            editingCron={editingCron}\n            onClose={handleCloseForm}\n            onSuccess={handleFormSuccess}\n            onError={setError}\n          />\n        )}\n\n        {selectedCronLogs && (\n          <CronLogs \n            cron={selectedCronLogs}\n            onClose={handleCloseLogs}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}